<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MSToolKit.Validation</name>
    </assembly>
    <members>
        <member name="T:MSToolKit.Validation.ActionExecutionResult">
            <summary>
            A class, that contains members, representing result of an action.
            </summary>
        </member>
        <member name="M:MSToolKit.Validation.ActionExecutionResult.#ctor">
            <summary>
            Initializes a new instance of MSToolKit.Validation.ActionExecutionResult.
            </summary>
        </member>
        <member name="M:MSToolKit.Validation.ActionExecutionResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of MSToolKit.Validation.ActionExecutionResult.
            </summary>
            <param name="errors">
            System.Collections.Generic.IEnumerable of the error messages that should be saved to the current result.
            </param>
        </member>
        <member name="P:MSToolKit.Validation.ActionExecutionResult.Success">
            <summary>
            Gets the member that indicates wether the current result is succeeded or not.
            </summary>
        </member>
        <member name="M:MSToolKit.Validation.ActionExecutionResult.AddError(System.String)">
            <summary>
            Adds an error message to the current result.
            </summary>
            <param name="errorMessage">
            The error message that shold be added.
            </param>
        </member>
        <member name="M:MSToolKit.Validation.ActionExecutionResult.ToString">
            <summary>
            Returns a string representation of all the errors that has been added in the current result.
            </summary>
        </member>
        <member name="T:MSToolKit.Validation.CoreValidator">
            <summary>
            Provides validation methods for different kind of objects.
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfInvalidState(System.Object)">
            <summary>
            Throws an ValidationFailedException if the input object is not in a valid state, depending on its validation attributes.
            </summary>
            <param name="input">
            The object that should be validated.
            </param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfNull(System.Object)">
            <summary>
            Throws a System.ArgumentNullException if the input object is null.
            </summary>
            <param name="input">
            The object that should be validated.
            </param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfAnyNull(System.Object[])">
            <summary>
            Throws a System.ArgumentNullException if any of the input objects is null.
            </summary>
            <param name="input">The objects that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfNullOrEmpty(System.String)">
            <summary>
            Throws a System.ArgumentNullException if the input string is null or empty.
            </summary>
            <param name="input">The object that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfAnyNullOrEmpty(System.String[])">
            <summary>
            Throws a System.ArgumentNullException if any of the input strings is null or empty.
            </summary>
            <param name="input">The objects that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfNullOrWhitespace(System.String)">
            <summary>a System.ArgumentNullException
            Throws a System.ArgumentNullException if the input string is null, empty or whitespace.
            </summary>
            <param name="input">The object that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfAnyNullOrWhitespace(System.String[])">
            <summary>
            Throws a System.ArgumentNullException if any of the input strings is null, empty or whitespace.
            </summary>
            <param name="input">The objects that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ReturnOrThrowIfNull``1(``0)">
            <summary>
            Returns the passed object if it is not null. 
            If it's null - throws a System.ArgumentNullException.
            </summary>
            <typeparam name="TSource">The type of the input object.</typeparam>
            <param name="source">The object that should be validated and returned.</param>
            <returns>
            The validated source object.
            </returns>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfDefault``1(``0)">
            <summary>
            Throws a System.ArgumentException if the passed object has its default value. 
            Null for reference types and default value for value types.
            </summary>
            <typeparam name="TSource">
            The type if the object that should be validated.
            </typeparam>
            <param name="source">
            The object that should be validated.
            </param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfNegative(System.Int32)">
            <summary>
            Throws a System.ArgumentException if the passed object has negative value. Accepts System.Int32.
            </summary>
            <param name="input">The object that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfNegative(System.Double)">
            <summary>
            Throws a System.ArgumentException if the passed object has negative value. Accepts System.Double.
            </summary>
            <param name="input">The object that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfNegative(System.Decimal)">
            <summary>
            Throws a System.ArgumentException if the passed object has negative value. Accepts System.Decimal.
            </summary>
            <param name="input">The object that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfNotPositive(System.Int32)">
            <summary>
            Throws a System.ArgumentException if the passed object has negative value or zero. Accepts System.Int32.
            </summary>
            <param name="input">The object that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfNotPositive(System.Double)">
            <summary>
            Throws a System.ArgumentException if the passed object has negative value or zero. Accepts System.Double.
            </summary>
            <param name="input">The object that should be validated.</param>
        </member>
        <member name="M:MSToolKit.Validation.CoreValidator.ThrowIfNotPositive(System.Decimal)">
            <summary>
            Throws a System.ArgumentException if the passed object has negative value or zero. Accepts System.Decimal.
            </summary>
            <param name="input">The object that should be validated.</param>
        </member>
        <member name="T:MSToolKit.Validation.Exceptions.ValidationFailedException">
            <summary>
            Represents errors that occur during validation execution.
            </summary>
        </member>
        <member name="M:MSToolKit.Validation.Exceptions.ValidationFailedException.#ctor">
            <summary>
            Initializes a new instance of the MSToolKit.Validation.Exceptions.ValidationFailedException class.
            </summary>
        </member>
        <member name="M:MSToolKit.Validation.Exceptions.ValidationFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MSToolKit.Validation.Exceptions.ValidationFailedException 
            class with a specified error message.
            </summary>
            <param name="message">
            The message that describes the error.
            </param>
        </member>
        <member name="M:MSToolKit.Validation.Exceptions.ValidationFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MSToolKit.Validation.Exceptions.ValidationFailedException 
            class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference if no inner exception is specified.
            </param>
        </member>
        <member name="T:MSToolKit.Validation.Extensions.ObjectExtensions">
            <summary>
            Provides extension methods for the base Object class.
            </summary>
        </member>
        <member name="M:MSToolKit.Validation.Extensions.ObjectExtensions.Validate(System.Object)">
            <summary>
            Validates wether the specified object is in a valid state, depending on its attributes.
            </summary>
            <param name="obj">The object to be validated.</param>
            <returns>New instance of MSToolKit.Validation.ObjectValidationResult.</returns>
        </member>
        <member name="T:MSToolKit.Validation.ObjectValidationResult">
            <summary>
            A class, that contains members, representing validation results of an object.
            </summary>
        </member>
        <member name="M:MSToolKit.Validation.ObjectValidationResult.#ctor">
            <summary>
            Initialize a new instance of MSToolKit.Validation.ObjectValidationResult.
            </summary>
        </member>
        <member name="P:MSToolKit.Validation.ObjectValidationResult.Success">
            <summary>
            Gets the member, indicating wether the validation is successfull or not.
            </summary>
        </member>
        <member name="P:MSToolKit.Validation.ObjectValidationResult.Errors">
            <summary>
            Gets a member, containing all errors, if any, occured while validating a specified object.
            </summary>
        </member>
        <member name="M:MSToolKit.Validation.ObjectValidationResult.AddError(System.String)">
            <summary>
            Adds an error to the error list of the current instance.
            </summary>
            <param name="errorMessage">The error message, that should be added to the error list.</param>
        </member>
    </members>
</doc>
