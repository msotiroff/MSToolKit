<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MSToolKit.Mapping</name>
    </assembly>
    <members>
        <member name="T:MSToolKit.Mapping.AutoMapping.IAutoMapWith`1">
            <summary>
            Marker interface, that indicates the mapping source as generic parameter.
            </summary>
        </member>
        <member name="T:MSToolKit.Mapping.AutoMapping.IHaveCustomMapping">
            <summary>
            Provides an abstraction for configuring a custom mapping for the inheritor.
            </summary>
        </member>
        <member name="M:MSToolKit.Mapping.AutoMapping.IHaveCustomMapping.ConfigureMapping(AutoMapper.Profile)">
            <summary>
            Configures custom mapping rules between the source and the destination.
            </summary>
            <param name="mapperProfile">The inheritor instance of the AutoMapper.Profile class.</param>
        </member>
        <member name="T:MSToolKit.Mapping.AutoMapping.Profiles.DefaultProfile">
            <summary>
            The default implementation of AutoMapper.Profile.
            </summary>
        </member>
        <member name="M:MSToolKit.Mapping.AutoMapping.Profiles.DefaultProfile.#ctor">
            <summary>
            Initialize a new instance of MSToolKit.Mapping.AutoMapping.Profiles.DefaultProfile.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MSToolKit.Mapping.AutoMapping.Profiles.DefaultProfile.CreateMappings(System.Collections.Generic.IEnumerable{System.Type})" -->
        <member name="M:MSToolKit.Mapping.AutoMapping.Profiles.DefaultProfile.CreateCustomMappins(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Calls ConfigureMapping method of all types, which extends IHaveCustomMapping interface.
            </summary>
        </member>
        <member name="T:MSToolKit.Mapping.CustomMapping.Abstraction.ICustomMapper">
            <summary>
            Provides an abstraction for custom mapping between objects.
            </summary>
        </member>
        <member name="M:MSToolKit.Mapping.CustomMapping.Abstraction.ICustomMapper.Map``2(``0)">
            <summary>
            Projects the source object to a new form.
            WARNING: All constructor logic of the destination object will not be executed.
            </summary>
            <typeparam name="TSource">
            The type of the object to be transformed.
            </typeparam>
            <typeparam name="TDestination">
            The type of the object that the source object should be transformed to.
            </typeparam>
            <param name="source">
            The object to be transformed.
            </param>
            <returns>
            New instance of TDestination. All constructor logic of the destination object will not be executed.
            </returns>
        </member>
        <member name="T:MSToolKit.Mapping.CustomMapping.CustomMapper">
            <summary>
            The default implementation of MSToolKit.Mapping.CustomMapping.Abstraction.ICustomMapper.
            </summary>
        </member>
        <member name="M:MSToolKit.Mapping.CustomMapping.CustomMapper.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of MSToolKit.Mapping.CustomMapping.CustomMapper.
            </summary>
            <param name="serviceProvider">
            The current instance of System.IServiceProvider.
            </param>
        </member>
        <member name="M:MSToolKit.Mapping.CustomMapping.CustomMapper.Map``2(``0)">
            <summary>
            Projects the source object to a new form.
            WARNING: All constructor logic of the destination object will not be executed.
            </summary>
            <typeparam name="TSource">
            The type of the object to be transformed.
            </typeparam>
            <typeparam name="TDestination">
            The type of the object that the source object should be transformed to.
            </typeparam>
            <param name="source">
            The object to be transformed.
            </param>
            <returns>
            New instance of TDestination. All constructor logic of the destination object will not be executed.
            </returns>
        </member>
        <member name="M:MSToolKit.Mapping.CustomMapping.DependencyInjection.ServiceCollectionExtensions.AddCustomMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add a default implementation of MSToolKit.Mapping.CustomMapping.Abstraction.ICustomMapper 
            that provides a functionality for default mapping between objects.
            </summary>
            <param name="services">
            The service collection, that will service provider be built from.
            </param>
            <returns>
            The same instane of Microsoft.Extensions.DependencyInjection.IServiceCollection with filled authentication services.
            </returns>
        </member>
        <member name="M:MSToolKit.Mapping.CustomMapping.DependencyInjection.ServiceCollectionExtensions.AddCustomMapping``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{``0,``1})">
            <summary>
            Add a default mapping between two type of objects.
            </summary>
            <param name="services">
            The service collection, that will service provider be built from.
            </param>
            <param name="convertion">
            A delegate that accepts a source object and returns transformed destination object.
            </param>
            <returns>
            The same instane of Microsoft.Extensions.DependencyInjection.IServiceCollection with filled authentication services.
            </returns>
        </member>
        <member name="T:MSToolKit.Mapping.CustomMapping.Mapping`2">
            <summary>
            Provides a default mapping between two type of objects.
            </summary>
        </member>
        <member name="M:MSToolKit.Mapping.CustomMapping.Mapping`2.#ctor(System.Func{`0,`1})">
            <summary>
            Initializes a new instance of MSToolKit.Mapping.CustomMapping.Mapping.
            </summary>
            <param name="convertion">
            Delegate that accepts a source object and returns a new destination form of it.
            </param>
        </member>
        <member name="M:MSToolKit.Mapping.CustomMapping.Mapping`2.#ctor">
            <summary>
            Initializes a new instance of MSToolKit.Mapping.CustomMapping.Mapping.
            </summary>
        </member>
        <member name="M:MSToolKit.Mapping.CustomMapping.Mapping`2.MapFrom(`0)">
            <summary>
            Make a convertion from a source object to a destination object.
            </summary>
            <param name="source">
            The source object that should be transformed.
            </param>
            <returns>
            The transformed destination object.
            </returns>
        </member>
    </members>
</doc>
